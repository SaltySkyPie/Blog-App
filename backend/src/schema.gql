# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Article {
  comments: [Comment!]!
  content: String!
  createdAt: DateTime!
  id: ID!
  imageUrl: String
  perex: String!
  state: ArticleState!
  title: String!
  updatedAt: DateTime!
  user: User!
}

enum ArticleState {
  DRAFT
  HIDDEN
  PUBLISHED
}

type Comment {
  article: Article!
  content: String!
  createdAt: DateTime!
  id: ID!
  updatedAt: DateTime!
  user: User!
}

input CreateArticleInput {
  content: String!
  imageUrl: String
  perex: String!
  state: ArticleState!
  title: String!
}

input CreateCommentInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input CreateVoteInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  changeState(id: ID!, state: ArticleState!): Article!
  createArticle(createArticleInput: CreateArticleInput!): Article!
  createComment(createCommentInput: CreateCommentInput!): Comment!
  createVote(createVoteInput: CreateVoteInput!): Vote!
  removeArticle(id: Int!): Boolean!
  removeComment(id: Int!): Comment!
  removeVote(id: Int!): Vote!
  updateArticle(updateArticleInput: UpdateArticleInput!): Article!
  updateComment(updateCommentInput: UpdateCommentInput!): Comment!
  updateUser(updateUserInput: UpdateUserInput!): User!
  updateVote(updateVoteInput: UpdateVoteInput!): Vote!
}

type Query {
  article(id: ID!): Article!
  articles: [Article!]!
  comment(id: Int!): Comment!
  user(id: Int!): User!
  userArticle(id: ID!): Article!
  userArticles: [Article!]!
  vote(id: Int!): Vote!
}

input UpdateArticleInput {
  content: String
  id: ID!
  imageUrl: String
  perex: String
  state: ArticleState
  title: String
}

input UpdateCommentInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

input UpdateUserInput {
  firstName: String
  id: ID!
  lastName: String
  middleName: String
  password: String
  username: String
}

input UpdateVoteInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}

type User {
  articles: [Article!]!
  comments: [Comment!]!
  createdAt: DateTime!
  firstName: String!
  id: ID!
  lastName: String!
  middleName: String
  updatedAt: DateTime!
  username: String!
}

type Vote {
  comment: Comment!
  createdAt: DateTime!
  id: ID!
  type: VoteType!
  updatedAt: DateTime!
  user: User!
}

enum VoteType {
  DOWN
  UP
}